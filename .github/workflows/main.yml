name: Deploy Simple CI/CD

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: ap-northeast-1
  ECS_SERVICE: cicd-service
  ECS_CLUSTER: cicd-cluster
  ECS_TASK_DEFINITION: .aws/task-definition.json

permissions:
  contents: read

jobs:
  app-test-build-image:
    name: App Container - Test and Build
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - name: Build an Image and Run Tests
        run: |
          docker image build -t temp_app_image_name:latest .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push the image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_APP_SERVER_REPOSITORY }}
        run: |
          docker image tag temp_app_image_name:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    needs: [app-test-build-image]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Fill in the new image ID in the Amazon ECS task definition for app
        id: render-app-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: app
          image: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_APP_SERVER_REPOSITORY }}:latest
          environment-variables: API_KEY=${{ secrets.API_KEY }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-app-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
